{
	"version": 3,
	"sources": [
		"pointerUtils.ts"
	],
	"names": [
		"browser",
		"dom",
		"domUtils",
		"hypot",
		"is",
		"pointerExtend",
		"pointerUtils",
		"copyCoords",
		"dest",
		"src",
		"page",
		"x",
		"y",
		"client",
		"timeStamp",
		"setCoordDeltas",
		"targetObj",
		"prev",
		"cur",
		"setCoordVelocity",
		"delta",
		"dt",
		"Math",
		"max",
		"isNativePointer",
		"pointer",
		"Event",
		"Touch",
		"getXY",
		"type",
		"xy",
		"getPageXY",
		"isOperaMobile",
		"window",
		"scrollX",
		"scrollY",
		"getClientXY",
		"getPointerId",
		"number",
		"pointerId",
		"identifier",
		"setCoords",
		"pointers",
		"length",
		"pointerAverage",
		"tmpXY",
		"getTouchPair",
		"event",
		"touches",
		"array",
		"changedTouches",
		"average",
		"pageX",
		"pageY",
		"clientX",
		"clientY",
		"screenX",
		"screenY",
		"prop",
		"touchBBox",
		"minX",
		"min",
		"minY",
		"maxX",
		"maxY",
		"left",
		"top",
		"right",
		"bottom",
		"width",
		"height",
		"touchDistance",
		"deltaSource",
		"sourceX",
		"sourceY",
		"dx",
		"dy",
		"touchAngle",
		"angle",
		"atan2",
		"PI",
		"getPointerType",
		"string",
		"pointerType",
		"undefined",
		"test",
		"getEventTargets",
		"path",
		"func",
		"composedPath",
		"getActualElement",
		"target",
		"currentTarget",
		"newCoords",
		"coordsToEvent",
		"coords",
		"buttons"
	],
	"mappings": "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",
	"sourcesContent": [
		"import browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport * as is from './is'\nimport pointerExtend from './pointerExtend'\n\nconst pointerUtils = {\n  copyCoords (dest, src) {\n    dest.page = dest.page || {}\n    dest.page.x = src.page.x\n    dest.page.y = src.page.y\n\n    dest.client = dest.client || {}\n    dest.client.x = src.client.x\n    dest.client.y = src.client.y\n\n    dest.timeStamp = src.timeStamp\n  },\n\n  setCoordDeltas (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x\n    targetObj.page.y    = cur.page.y    - prev.page.y\n    targetObj.client.x  = cur.client.x  - prev.client.x\n    targetObj.client.y  = cur.client.y  - prev.client.y\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n  },\n\n  setCoordVelocity (targetObj, delta) {\n    const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n    targetObj.page.x   = delta.page.x / dt\n    targetObj.page.y   = delta.page.y / dt\n    targetObj.client.x = delta.client.x / dt\n    targetObj.client.y = delta.client.y / dt\n    targetObj.timeStamp = dt\n  },\n\n  isNativePointer  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch)\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY (type, pointer, xy) {\n    xy = xy || {}\n    type = type || 'page'\n\n    xy.x = pointer[type + 'X']\n    xy.y = pointer[type + 'Y']\n\n    return xy\n  },\n\n  getPageXY (pointer: Interact.PointerType | Interact.InteractEvent, page?: Interact.Point) {\n    page = page || { x: 0, y: 0 }\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page)\n\n      page.x += window.scrollX\n      page.y += window.scrollY\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page)\n    }\n\n    return page\n  },\n\n  getClientXY (pointer, client) {\n    client = client || {}\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client)\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client)\n    }\n\n    return client\n  },\n\n  getPointerId (pointer) {\n    return is.number(pointer.pointerId) ? pointer.pointerId : pointer.identifier\n  },\n\n  setCoords (targetObj, pointers: any[], timeStamp: number) {\n    const pointer = (pointers.length > 1\n      ? pointerUtils.pointerAverage(pointers)\n      : pointers[0])\n\n    const tmpXY = {} as { x: number, y: number }\n\n    pointerUtils.getPageXY(pointer, tmpXY)\n    targetObj.page.x = tmpXY.x\n    targetObj.page.y = tmpXY.y\n\n    pointerUtils.getClientXY(pointer, tmpXY)\n    targetObj.client.x = tmpXY.x\n    targetObj.client.y = tmpXY.y\n\n    targetObj.timeStamp = timeStamp\n  },\n\n  pointerExtend,\n\n  getTouchPair (event) {\n    const touches = []\n\n    // array of touches is supplied\n    if (is.array(event)) {\n      touches[0] = event[0]\n      touches[1] = event[1]\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0]\n          touches[1] = event.changedTouches[0]\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0]\n          touches[1] = event.changedTouches[1]\n        }\n      }\n      else {\n        touches[0] = event.touches[0]\n        touches[1] = event.touches[1]\n      }\n    }\n\n    return touches\n  },\n\n  pointerAverage (pointers: PointerEvent[] | Event[]) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    }\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop]\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length\n    }\n\n    return average\n  },\n\n  touchBBox (event: Event | Array<(Interact.PointerType) | TouchEvent>) {\n    if (!(event as any).length &&\n        !((event as TouchEvent).touches &&\n          (event as TouchEvent).touches.length > 1)) {\n      return null\n    }\n\n    const touches = pointerUtils.getTouchPair(event)\n    const minX = Math.min(touches[0].pageX, touches[1].pageX)\n    const minY = Math.min(touches[0].pageY, touches[1].pageY)\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      right: maxX,\n      bottom: maxY,\n      width: maxX - minX,\n      height: maxY - minY,\n    }\n  },\n\n  touchDistance (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n\n    const dx = touches[0][sourceX] - touches[1][sourceX]\n    const dy = touches[0][sourceY] - touches[1][sourceY]\n\n    return hypot(dx, dy)\n  },\n\n  touchAngle (event, deltaSource) {\n    const sourceX = deltaSource + 'X'\n    const sourceY = deltaSource + 'Y'\n    const touches = pointerUtils.getTouchPair(event)\n    const dx = touches[1][sourceX] - touches[0][sourceX]\n    const dy = touches[1][sourceY] - touches[0][sourceY]\n    const angle = 180 * Math.atan2(dy, dx) / Math.PI\n\n    return  angle\n  },\n\n  getPointerType (pointer) {\n    return is.string(pointer.pointerType)\n      ? pointer.pointerType\n      : is.number(pointer.pointerType)\n        ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]\n        // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        : /touch/.test(pointer.type) || pointer instanceof dom.Touch\n          ? 'touch'\n          : 'mouse'\n  },\n\n  // [ event.target, event.currentTarget ]\n  getEventTargets (event) {\n    const path = is.func(event.composedPath) ? event.composedPath() : event.path\n\n    return [\n      domUtils.getActualElement(path ? path[0] : event.target),\n      domUtils.getActualElement(event.currentTarget),\n    ]\n  },\n\n  newCoords () {\n    return {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    }\n  },\n\n  coordsToEvent (coords: MockCoords) {\n    const event = {\n      coords,\n      get page () { return this.coords.page },\n      get client () { return this.coords.client },\n      get timeStamp () { return this.coords.timeStamp },\n      get pageX () { return this.coords.page.x },\n      get pageY () { return this.coords.page.y },\n      get clientX () { return this.coords.client.x },\n      get clientY () { return this.coords.client.y },\n      get pointerId () { return this.coords.pointerId },\n      get target () { return this.coords.target },\n      get type () { return this.coords.type },\n      get pointerType () { return this.coords.pointerType },\n      get buttons () { return this.coords.buttons },\n    }\n\n    return event as typeof event & Interact.PointerType & Interact.PointerEventType\n  },\n}\n\nexport default pointerUtils\n\nexport interface MockCoords {\n  page: Interact.Point\n  client: Interact.Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n"
	]
}