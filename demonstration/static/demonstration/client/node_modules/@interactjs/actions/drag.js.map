{
	"version": 3,
	"sources": [
		"drag.ts"
	],
	"names": [
		"ActionName",
		"arr",
		"is",
		"Drag",
		"install",
		"scope",
		"actions",
		"Interactable",
		"defaults",
		"addListeners",
		"beforeMove",
		"move",
		"prototype",
		"draggable",
		"drag",
		"names",
		"push",
		"merge",
		"eventTypes",
		"methodDict",
		"interaction",
		"prepared",
		"name",
		"axis",
		"coords",
		"cur",
		"page",
		"y",
		"start",
		"client",
		"velocity",
		"x",
		"iEvent",
		"opposite",
		"delta",
		"options",
		"object",
		"enabled",
		"setPerAction",
		"setOnEvents",
		"test",
		"lockAxis",
		"startAxis",
		"bool",
		"id",
		"checker",
		"_pointer",
		"_event",
		"interactable",
		"dragOptions",
		"getCursor"
	],
	"mappings": "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",
	"sourcesContent": [
		"import { ActionName, Scope } from '../core/scope'\nimport * as arr from '../utils/arr'\nimport * as is from '../utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drag: Interact.DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Drag]?: typeof drag\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Drag = 'drag'\n  }\n}\n\n(ActionName as any).Drag = 'drag'\n\nexport type DragEvent = Interact.InteractEvent<ActionName.Drag>\n\nexport type DraggableMethod = Interact.ActionMethod<Interact.DraggableOptions>\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.addListeners({\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n  })\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions[ActionName.Drag] = drag\n  actions.names.push(ActionName.Drag)\n  arr.merge(actions.eventTypes, [\n    'dragstart',\n    'dragmove',\n    'draginertiastart',\n    'dragresume',\n    'dragend',\n  ])\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y   = 0\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x   = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (this: Interact.Interactable, options?: Interact.DraggableOptions | boolean): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Interact.Plugin = {\n  id: 'actions/drag',\n  install,\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  } as Interact.DropzoneOptions,\n\n  checker (_pointer, _event, interactable) {\n    const dragOptions = interactable.options.drag\n\n    return dragOptions.enabled\n      ? {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n      : null\n  },\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n"
	]
}