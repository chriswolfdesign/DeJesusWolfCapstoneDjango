{
	"version": 3,
	"sources": [
		"index.ts"
	],
	"names": [
		"EventPhase",
		"modifiers",
		"restoreCoords",
		"setCoords",
		"utils",
		"raf",
		"Resume",
		"InertiaStart",
		"install",
		"scope",
		"defaults",
		"usePlugin",
		"perAction",
		"inertia",
		"enabled",
		"resistance",
		"minSpeed",
		"endSpeed",
		"allowResume",
		"smoothEndDuration",
		"resume",
		"interaction",
		"event",
		"pointer",
		"eventTarget",
		"state",
		"active",
		"element",
		"is",
		"cancel",
		"timeout",
		"simulation",
		"updatePointer",
		"coords",
		"cur",
		"pointers",
		"map",
		"p",
		"_now",
		"signalArg",
		"phase",
		"fire",
		"resumeEvent",
		"InteractEvent",
		"prepared",
		"name",
		"_fireEvent",
		"copyCoords",
		"prev",
		"dom",
		"parentNode",
		"release",
		"noPreEnd",
		"interacting",
		"options",
		"getOptions",
		"now",
		"client",
		"velocityClient",
		"velocity",
		"pointerSpeed",
		"hypot",
		"x",
		"y",
		"smoothEnd",
		"modifierResult",
		"inertiaPossible",
		"startEvent",
		"timeStamp",
		"modifierArg",
		"interactable",
		"rect",
		"pageCoords",
		"page",
		"states",
		"modifierStatus",
		"extend",
		"preEnd",
		"prevCoords",
		"requireEndOnly",
		"result",
		"prevEvent",
		"setAll",
		"changed",
		"upCoords",
		"t0",
		"vx0",
		"vy0",
		"v0",
		"calcInertia",
		"xe",
		"ye",
		"modifiedXe",
		"delta",
		"modifiedYe",
		"request",
		"inertiaTick",
		"sx",
		"sy",
		"smothEndTick",
		"stop",
		"lambda",
		"inertiaDur",
		"Math",
		"log",
		"x0",
		"y0",
		"te",
		"lambda_v0",
		"one_ve_v0",
		"updateInertiaCoords",
		"setCoordDeltas",
		"setCoordVelocity",
		"t",
		"progress",
		"exp",
		"quadPoint",
		"getQuadraticCurvePoint",
		"move",
		"end",
		"duration",
		"easeOutQuad",
		"pageUp",
		"clientUp",
		"pageX",
		"pageY",
		"clientX",
		"clientY",
		"id",
		"listeners",
		"before"
	],
	"mappings": "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",
	"sourcesContent": [
		"import { EventPhase } from '../core/InteractEvent'\nimport modifiers, { restoreCoords, setCoords } from '../modifiers/base'\nimport * as utils from '../utils/index'\nimport raf from '../utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Resume = 'resume',\n    InertiaStart = 'inertiastart',\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: {\n      active: boolean\n      smoothEnd: boolean\n      allowResume: boolean\n\n      startEvent?: Interact.InteractEvent\n      upCoords: {\n        page: Interact.Point\n        client: Interact.Point\n        timeStamp: number\n      }\n\n      xe?: number\n      ye?: number\n      sx?: number\n      sy?: number\n\n      t0?: number\n      te?: number\n      v0?: number\n      vx0?: number\n      vy0?: number\n      duration?: number\n      modifiedXe?: number\n      modifiedYe?: number\n\n      lambda_v0?: number // eslint-disable-line camelcase\n      one_ve_v0?: number // eslint-disable-line camelcase\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number        // the lambda in exponential decay\n      minSpeed?: number          // target speed must be above this for inertia to start\n      endSpeed?: number          // the speed at which inertia is slow enough to stop\n      allowResume?: true         // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    } | boolean // FIXME\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:action-resume': {\n      interaction: Interact.Interaction\n      phase: EventPhase.Resume\n    }\n  }\n}\n\n(EventPhase as any).Resume = 'resume'\n;(EventPhase as any).InertiaStart = 'inertiastart'\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(modifiers)\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nfunction resume (\n  { interaction, event, pointer, eventTarget }: Interact.SignalArgs['interactions:down'],\n  scope: Interact.Scope,\n) {\n  const state = interaction.inertia\n\n  // Check if the down event hits the current inertia target\n  if (state.active) {\n    let element = eventTarget\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        raf.cancel(state.timeout)\n        state.active = false\n        interaction.simulation = null\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer as Interact.PointerType, event as Interact.PointerEventType, eventTarget, true)\n        utils.pointer.setCoords(\n          interaction.coords.cur,\n          interaction.pointers.map(p => p.pointer),\n          interaction._now(),\n        )\n\n        // fire appropriate signals\n        const signalArg = {\n          interaction,\n          phase: EventPhase.Resume as const,\n        }\n\n        scope.fire('interactions:action-resume', signalArg)\n\n        // fire a reume event\n        const resumeEvent = new scope.InteractEvent(\n          interaction, event as Interact.PointerEventType, interaction.prepared.name, EventPhase.Resume, interaction.element)\n\n        interaction._fireEvent(resumeEvent)\n\n        utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n        break\n      }\n\n      element = utils.dom.parentNode(element)\n    }\n  }\n}\n\nfunction release<T extends Interact.ActionName> (\n  { interaction, event, noPreEnd }: Interact.DoPhaseArg & { noPreEnd?: boolean },\n  scope: Interact.Scope,\n) {\n  const state = interaction.inertia\n\n  if (!interaction.interacting() ||\n    (interaction.simulation && interaction.simulation.active) ||\n  noPreEnd) {\n    return null\n  }\n\n  const options = getOptions(interaction)\n\n  const now = interaction._now()\n  const { client: velocityClient } = interaction.coords.velocity\n  const pointerSpeed = utils.hypot(velocityClient.x, velocityClient.y)\n\n  let smoothEnd = false\n  let modifierResult: ReturnType<typeof modifiers.setAll>\n\n  // check if inertia should be started\n  const inertiaPossible = (options && options.enabled &&\n                     interaction.prepared.name !== 'gesture' &&\n                     event !== state.startEvent)\n\n  const inertia = (inertiaPossible &&\n    (now - interaction.coords.cur.timeStamp) < 50 &&\n    pointerSpeed > options.minSpeed &&\n    pointerSpeed > options.endSpeed)\n\n  const modifierArg = {\n    interaction,\n    interactable: interaction.interactable,\n    element: interaction.element,\n    rect: interaction.rect,\n    pageCoords: interaction.coords.cur.page,\n    states: inertiaPossible && interaction.modifiers.states.map(\n      modifierStatus => utils.extend({}, modifierStatus),\n    ),\n    preEnd: true,\n    prevCoords: null,\n    requireEndOnly: null,\n    phase: EventPhase.InertiaStart,\n  }\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifierArg.prevCoords = interaction.modifiers.result\n      ? interaction.modifiers.result.coords\n      : interaction.prevEvent.page\n    modifierArg.requireEndOnly = false\n    modifierResult = modifiers.setAll(modifierArg)\n\n    if (modifierResult.changed) {\n      smoothEnd = true\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return null }\n\n  utils.pointer.copyCoords(state.upCoords, interaction.coords.cur)\n\n  setCoords(modifierArg)\n  interaction.pointers[0].pointer = state.startEvent = new scope.InteractEvent(\n    interaction,\n    event,\n    // FIXME add proper typing Action.name\n    interaction.prepared.name as T,\n    EventPhase.InertiaStart,\n    interaction.element,\n  )\n  restoreCoords(modifierArg)\n\n  state.t0 = now\n\n  state.active = true\n  state.allowResume = options.allowResume\n  interaction.simulation = state\n\n  interaction.interactable.fire(state.startEvent)\n\n  if (inertia) {\n    state.vx0 = interaction.coords.velocity.client.x\n    state.vy0 = interaction.coords.velocity.client.y\n    state.v0 = pointerSpeed\n\n    calcInertia(interaction, state)\n\n    utils.extend(modifierArg.pageCoords, interaction.coords.cur.page)\n\n    modifierArg.pageCoords.x += state.xe\n    modifierArg.pageCoords.y += state.ye\n    modifierArg.prevCoords = null\n    modifierArg.requireEndOnly = true\n\n    modifierResult = modifiers.setAll(modifierArg)\n\n    state.modifiedXe += modifierResult.delta.x\n    state.modifiedYe += modifierResult.delta.y\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.smoothEnd = true\n    state.xe = modifierResult.delta.x\n    state.ye = modifierResult.delta.y\n\n    state.sx = state.sy = 0\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n\n  return false\n}\n\nfunction stop ({ interaction }: Interact.DoPhaseArg) {\n  const state = interaction.inertia\n  if (state.active) {\n    raf.cancel(state.timeout)\n    state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction calcInertia (interaction: Interact.Interaction, state) {\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const inertiaDur = -Math.log(options.endSpeed / state.v0) / lambda\n\n  state.x0 = interaction.prevEvent.page.x\n  state.y0 = interaction.prevEvent.page.y\n  state.t0 = state.startEvent.timeStamp / 1000\n  state.sx = state.sy = 0\n\n  state.modifiedXe = state.xe = (state.vx0 - inertiaDur) / lambda\n  state.modifiedYe = state.ye = (state.vy0 - inertiaDur) / lambda\n  state.te = inertiaDur\n\n  state.lambda_v0 = lambda / state.v0\n  state.one_ve_v0 = 1 - options.endSpeed / state.v0\n}\n\nfunction inertiaTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n  utils.pointer.setCoordDeltas(interaction.coords.delta, interaction.coords.prev, interaction.coords.cur)\n  utils.pointer.setCoordVelocity(interaction.coords.velocity, interaction.coords.delta)\n\n  const state = interaction.inertia\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const t = interaction._now() / 1000 - state.t0\n\n  if (t < state.te) {\n    const progress =  1 - (Math.exp(-lambda * t) - state.lambda_v0) / state.one_ve_v0\n\n    if (state.modifiedXe === state.xe && state.modifiedYe === state.ye) {\n      state.sx = state.xe * progress\n      state.sy = state.ye * progress\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(\n        0, 0,\n        state.xe, state.ye,\n        state.modifiedXe, state.modifiedYe,\n        progress)\n\n      state.sx = quadPoint.x\n      state.sy = quadPoint.y\n    }\n\n    interaction.move()\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.sx = state.modifiedXe\n    state.sy = state.modifiedYe\n\n    interaction.move()\n    interaction.end(state.startEvent)\n    state.active = false\n    interaction.simulation = null\n  }\n\n  utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n}\n\nfunction smothEndTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n\n  const state = interaction.inertia\n  const t = interaction._now() - state.t0\n  const { smoothEndDuration: duration } = getOptions(interaction)\n\n  if (t < duration) {\n    state.sx = utils.easeOutQuad(t, 0, state.xe, duration)\n    state.sy = utils.easeOutQuad(t, 0, state.ye, duration)\n\n    interaction.move()\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n  else {\n    state.sx = state.xe\n    state.sy = state.ye\n\n    interaction.move()\n    interaction.end(state.startEvent)\n\n    state.smoothEnd =\n      state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction updateInertiaCoords (interaction: Interact.Interaction) {\n  const state = interaction.inertia\n\n  // return if inertia isn't running\n  if (!state.active) { return }\n\n  const pageUp   = state.upCoords.page\n  const clientUp = state.upCoords.client\n\n  utils.pointer.setCoords(interaction.coords.cur, [{\n    pageX  : pageUp.x   + state.sx,\n    pageY  : pageUp.y   + state.sy,\n    clientX: clientUp.x + state.sx,\n    clientY: clientUp.y + state.sy,\n  }], interaction._now())\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nexport default {\n  id: 'inertia',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = {\n        active     : false,\n        smoothEnd  : false,\n        allowResume: false,\n        upCoords   : {} as any,\n        timeout    : null,\n      }\n    },\n\n    'interactions:before-action-end': release,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n  },\n  before: 'modifiers/base',\n  calcInertia,\n  inertiaTick,\n  smothEndTick,\n  updateInertiaCoords,\n}\n"
	]
}